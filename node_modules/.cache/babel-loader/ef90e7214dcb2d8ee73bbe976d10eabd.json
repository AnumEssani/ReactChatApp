{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/anum/Desktop/ReactChatApp/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport Firebase from './FirebaseConfig';\nimport Login from './components/Login';\nimport Chat from './components/Chat';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null\n    };\n\n    this.authListner = () => {\n      Firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          this.setState({\n            user\n          });\n          Firebase.database().ref('users/').once('value', snapshot => {\n            let data = snapshot.val(); // console.log(Object.values(data))\n\n            this.props.getUsersFromDB(Object.values(data));\n          });\n        } else {\n          this.setState({\n            user: null\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.authListner();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.state.user ? /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  getUsersFromDB: users => dispatch({\n    type: 'USERFROMDB',\n    payload: users\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/anum/Desktop/ReactChatApp/src/App.js"],"names":["React","Component","connect","Firebase","Login","Chat","App","state","user","authListner","auth","onAuthStateChanged","setState","database","ref","once","snapshot","data","val","props","getUsersFromDB","Object","values","componentDidMount","render","mapStateToProps","mapDispatchToProps","dispatch","users","type","payload"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAIA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE;AADA,KADkB;;AAAA,SAO1BC,WAP0B,GAOZ,MAAM;AAClBN,MAAAA,QAAQ,CAACO,IAAT,GAAgBC,kBAAhB,CAAmCH,IAAI,IAAI;AACzC,YAAIA,IAAJ,EAAU;AACR,eAAKI,QAAL,CAAc;AAAEJ,YAAAA;AAAF,WAAd;AACAL,UAAAA,QAAQ,CAACU,QAAT,GAAoBC,GAApB,CAAwB,QAAxB,EAAkCC,IAAlC,CAAuC,OAAvC,EAAgDC,QAAQ,IAAI;AAC1D,gBAAIC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAX,CAD0D,CAE1D;;AACA,iBAAKC,KAAL,CAAWC,cAAX,CAA0BC,MAAM,CAACC,MAAP,CAAcL,IAAd,CAA1B;AACD,WAJD;AAKD,SAPD,MAOO;AACL,eAAKL,QAAL,CAAc;AAAEJ,YAAAA,IAAI,EAAE;AAAR,WAAd;AACD;AACF,OAXD;AAYD,KApByB;AAAA;;AAI1Be,EAAAA,iBAAiB,GAAG;AAClB,SAAKd,WAAL;AACD;;AAgBDe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACG,KAAKjB,KAAL,CAAWC,IAAX,gBAAkB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAAlB,gBAA6B,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADhC;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA5ByB;;AA+B5B,MAAMiB,eAAe,GAAIlB,KAAD,KAAY,EAAZ,CAAxB;;AAIA,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCP,EAAAA,cAAc,EAAEQ,KAAK,IAAID,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,OAAO,EAAEF;AAA/B,GAAD;AADK,CAAL,CAAnC;;AAIA,eAAe1B,OAAO,CAACuB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CpB,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport Firebase from './FirebaseConfig';\nimport Login from './components/Login';\nimport Chat from './components/Chat';\n\n\n\nclass App extends Component {\n  state = {\n    user: null\n  }\n  componentDidMount() {\n    this.authListner()\n  }\n  authListner = () => {\n    Firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user })\n        Firebase.database().ref('users/').once('value', snapshot => {\n          let data = snapshot.val();\n          // console.log(Object.values(data))\n          this.props.getUsersFromDB(Object.values(data))\n        })\n      } else {\n        this.setState({ user: null })\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.user ? <Chat /> : <Login />}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n\n})\n\nconst mapDispatchToProps = dispatch => ({\n  getUsersFromDB: users => dispatch({ type: 'USERFROMDB', payload: users })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}